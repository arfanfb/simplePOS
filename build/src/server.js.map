{"version":3,"sources":["server.js"],"names":["dotenv","config","load","console","log","process","env","PORT","app","Express","server","Server","use","static","path","join","__dirname","disable","set","appRoute","apiRoute","port","NODE_ENV","listen","err","error","info"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEAA,MAAM,CAACC,MAAP;AACAD,MAAM,CAACE,IAAP;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,IAAxB;AAEA,IAAMC,GAAG,GAAG,IAAIC,gBAAJ,EAAZ;AACA,IAAMC,MAAM,GAAG,IAAIC,YAAJ,CAAWH,GAAX,CAAf;AAEAA,GAAG,CAACI,GAAJ,CAAQH,iBAAQI,MAAR,CAAeC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;AACAR,GAAG,CAACI,GAAJ,CAAQH,iBAAQI,MAAR,CAAeC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,mCAArB,CAAf,CAAR;AAEAR,GAAG,CAACS,OAAJ,CAAY,YAAZ;AACAT,GAAG,CAACU,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAV,GAAG,CAACU,GAAJ,CAAQ,OAAR,EAAiBJ,cAAKC,IAAL,CAAUC,SAAV,EAAqB,iBAArB,CAAjB;AAEAR,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaO,aAAb;AACAX,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgBQ,aAAhB,E,CAEA;;AACA,IAAMC,IAAI,GAAGhB,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMD,GAAG,GAAGD,OAAO,CAACC,GAAR,CAAYgB,QAAZ,IAAwB,YAApC;AAEAZ,MAAM,CAACa,MAAP,CAAcF,IAAd,EAAoB,UAAAG,GAAG,EAAI;AACzB,MAAIA,GAAJ,EAAS;AACP,WAAOrB,OAAO,CAACsB,KAAR,CAAcD,GAAd,CAAP;AACD;;AACDrB,EAAAA,OAAO,CAACuB,IAAR,8CAAmDL,IAAnD,eAA4Df,GAA5D;AACD,CALD","file":"server.js","sourcesContent":["import { Server } from 'http';\nimport Express from 'express';\nimport path from 'path';\nimport { appRoute } from './routes/app.js'\nimport { apiRoute } from './routes/api.js'\nimport * as dotenv from \"dotenv\";\n\ndotenv.config();\ndotenv.load()\n\nconsole.log(process.env.PORT)\n\nconst app = new Express();\nconst server = new Server(app);\n\napp.use(Express.static(path.join(__dirname, '../assets')));\napp.use(Express.static(path.join(__dirname, '../../node_modules/bootstrap/dist')));\n\napp.disable('view cache');\napp.set('view engine', 'ejs');\napp.set('views', path.join(__dirname, '../../src/views'));\n\napp.use('/', appRoute)\napp.use('/api', apiRoute)\n\n// start the server\nconst port = process.env.PORT || 8080;\nconst env = process.env.NODE_ENV || 'production';\n\nserver.listen(port, err => {\n  if (err) {\n    return console.error(err);\n  }\n  console.info(`Server running on http://localhost:${port} [${env}]`);\n});\n"]}