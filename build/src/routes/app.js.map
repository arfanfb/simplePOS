{"version":3,"sources":["app.js"],"names":["dotenv","config","load","urlencodedParser","bodyParser","urlencoded","extended","router","Express","Router","redisClient","redis","createClient","process","env","REDISPORT","REDISHOST","get","req","res","render","validateToken","cookies","cookie","parse","headers","token","undefined","del","clearCookie","redirect","url","role","error","value","cb","JSON"],"mappings":"AAAA;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEAA,MAAM,CAACC,MAAP;AACAD,MAAM,CAACE,IAAP;;AAEA,IAAIC,gBAAgB,GAAGC,oBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,iBAAQC,MAAR,EAAb;;;;AACA,IAAIC,WAAW,GAAGC,eAAMC,YAAN,CAAmBC,OAAO,CAACC,GAAR,CAAYC,SAA/B,EAA0CF,OAAO,CAACC,GAAR,CAAYE,SAAtD,CAAlB;;AAEAT,MAAM,CAACU,GAAP,CAAW,GAAX,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAClC,SAAOA,GAAG,CAACC,MAAJ,CAAW,OAAX,CAAP;AACD,CAFD;AAIAb,MAAM,CAACU,GAAP,CAAW,aAAX,EAA0Bd,gBAA1B,EAA4C,UAAUe,GAAV,EAAeC,GAAf,EAAoB;AAC9DE,EAAAA,aAAa,CAAC,YAAD,EAAc,UAAd,EAA0BH,GAA1B,EAA+BC,GAA/B,CAAb;AACD,CAFD;AAIAZ,MAAM,CAACU,GAAP,CAAW,UAAX,EAAuB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACzCE,EAAAA,aAAa,CAAC,SAAD,EAAW,SAAX,EAAsBH,GAAtB,EAA2BC,GAA3B,CAAb;AACD,CAFD;AAIAZ,MAAM,CAACU,GAAP,CAAW,SAAX,EAAsB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACxC,MAAIG,OAAO,GAAGC,gBAAOC,KAAP,CAAaN,GAAG,CAACO,OAAJ,CAAYF,MAAZ,IAAsB,EAAnC,CAAd;;AAEA,MAAID,OAAO,CAACI,KAAR,IAAiBC,SAArB,EAAgC;AAC9BjB,IAAAA,WAAW,CAACkB,GAAZ,CAAgBN,OAAO,CAACI,KAAxB;AACD;;AAEDP,EAAAA,GAAG,CAACU,WAAJ,CAAgB,OAAhB;AACA,SAAOV,GAAG,CAACW,QAAJ,CAAa,GAAb,CAAP;AACD,CATD;;AAWA,IAAMT,aAAa,GAAG,SAAhBA,aAAgB,CAACU,GAAD,EAAMC,IAAN,EAAYd,GAAZ,EAAiBC,GAAjB,EAAyB;AAC7C,MAAIG,OAAO,GAAGC,gBAAOC,KAAP,CAAaN,GAAG,CAACO,OAAJ,CAAYF,MAAZ,IAAsB,EAAnC,CAAd;;AAEA,MAAID,OAAO,CAACI,KAAR,IAAiBC,SAArB,EAAgC;AAC5BjB,IAAAA,WAAW,CAACO,GAAZ,CAAgBK,OAAO,CAACI,KAAxB,EAA+B,UAAUO,KAAV,EAAiBC,KAAjB,EAAwB;AACnD,UAAID,KAAJ,EAAW,OAAOE,EAAE,CAACF,KAAD,CAAT;;AAEX,UAAIC,KAAK,IAAI,IAAb,EAAmB;AACf,YAAIE,IAAI,CAACZ,KAAL,CAAWU,KAAX,EAAkBF,IAAlB,IAA0BA,IAA9B,EACE,OAAOb,GAAG,CAACC,MAAJ,CAAWW,GAAX,CAAP,CADF,KAGE,OAAOZ,GAAG,CAACW,QAAJ,CAAa,GAAb,CAAP;AACL,OALD,MAKO;AACH,eAAOX,GAAG,CAACW,QAAJ,CAAa,GAAb,CAAP;AACH;AACJ,KAXD;AAYH,GAbD,MAaO;AACL,WAAOX,GAAG,CAACW,QAAJ,CAAa,GAAb,CAAP;AACD;AACF,CAnBD","sourcesContent":["\"use strict\";\n\nimport Express from 'express'\nimport redis from 'redis'\nimport bodyParser from 'body-parser'\nimport cookie from 'cookie'\nimport * as dotenv from \"dotenv\";\n\ndotenv.config()\ndotenv.load()\n\nlet urlencodedParser = bodyParser.urlencoded({ extended: false })\n\nlet router = Express.Router()\nlet redisClient = redis.createClient(process.env.REDISPORT, process.env.REDISHOST);\n\nrouter.get('/', function (req, res) {\n  return res.render('login');\n});\n\nrouter.get('/masterdata', urlencodedParser, function (req, res) {\n  validateToken('masterdata','Operator', req, res)\n});\n\nrouter.get('/cashier', function (req, res) {\n  validateToken('cashier','Cashier', req, res)\n});\n\nrouter.get('/logout', function (req, res) {\n  let cookies = cookie.parse(req.headers.cookie || '')\n\n  if (cookies.token != undefined) {\n    redisClient.del(cookies.token)\n  }\n\n  res.clearCookie(\"token\");\n  return res.redirect('/')\n});\n\nconst validateToken = (url, role, req, res) => {\n  let cookies = cookie.parse(req.headers.cookie || '')\n\n  if (cookies.token != undefined) {\n      redisClient.get(cookies.token, function (error, value) {\n          if (error) return cb(error);\n\n          if (value != null) {\n              if (JSON.parse(value).role == role)\n                return res.render(url)\n              else\n                return res.redirect('/')\n          } else {\n              return res.redirect('/')\n          }\n      });\n  } else {\n    return res.redirect('/')\n  }\n}\n\nexport { router as appRoute }\n"],"file":"app.js"}