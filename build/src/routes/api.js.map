{"version":3,"sources":["api.js"],"names":["dotenv","config","load","router","Express","Router","urlencodedParser","bodyParser","urlencoded","extended","post","req","res","setHeader","datefrom","body","dateto","Checkouts","find","date","$gte","Date","$lt","populate","path","model","exec","err","checkout","status","send","JSON","stringify","cart","parse","subtotal","totalitem","itemCheckout","promises","newCheckout","parseInt","now","save","cartLen","length","map","item","idx","newItempayment","qty","id","push","items","message","code","name","price","Masterdatas","data","newData","put","params","findOne","_id","get","$and","$or","RegExp","next","previous","page","limit","response","task","skip","sort","datas","taskNext","username","password","crypto","createHash","update","digest","Users","user","client","redis","createClient","process","env","REDISPORT","REDISHOST","key","toLocaleString","url","set","cookie","serialize","httpOnly","maxAge","role","accessToken","newUser","createdAt","validateToken","token","result"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport cookie from 'cookie'\nimport Express from 'express'\nimport mongoose from 'mongoose'\nimport redis from 'redis'\nimport bodyParser from 'body-parser'\nimport crypto from 'crypto'\nimport Users from '../models/users.js'\nimport Masterdatas from '../models/masterdatas.js'\nimport Checkouts from '../models/checkouts.js'\nimport Itempayments from '../models/itempayments.js'\nimport * as dotenv from \"dotenv\";\n\ndotenv.config()\ndotenv.load()\n\nlet router = Express.Router()\nlet urlencodedParser = bodyParser.urlencoded({ extended: false })\n\nrouter.post('/report', urlencodedParser, (req, res) => {\n    res.setHeader('Content-Type', 'application/json');\n\n    let datefrom = req.body.datefrom\n    let dateto = req.body.dateto\n\n    Checkouts.find({ date: {$gte: new Date(datefrom), $lt: new Date(dateto)}}).\n    populate({\n       path: 'items',\n       populate: {\n         path: 'item',\n         model: 'Masterdatas'\n       }\n    }).\n    exec(function(err, checkout) {\n      if (err) throw err;\n\n      res.status(200);\n      res.send(JSON.stringify({checkout: checkout}));\n    });\n})\n\nrouter.post('/checkout', urlencodedParser, (req, res) => {\n    res.setHeader('Content-Type', 'application/json');\n\n    let cart = JSON.parse(req.body.cart)\n    let subtotal = req.body.subtotal\n    let totalitem = req.body.totalitem\n    let itemCheckout = []\n    let promises\n\n    let newCheckout = Checkouts({\n      subtotal: parseInt(subtotal),\n      totalitem: parseInt(totalitem),\n      date: Date.now()\n    });\n\n    newCheckout.save(function(err) {\n      if (err) throw err;\n\n      const cartLen = cart.length\n\n      cart.map((item,idx) =>\n        {\n          let newItempayment = Itempayments({\n            subtotal: item.subtotal,\n            totalitem: item.qty,\n            item: item.id\n          });\n\n          newItempayment.save(function(err) {\n            if (err) throw err;\n\n            itemCheckout.push(newItempayment)\n\n            if (cartLen === idx + 1) {\n                newCheckout.items = itemCheckout\n                newCheckout.save(function(err) {\n                    if (err) throw err;\n\n                    res.status(200);\n                    res.send(JSON.stringify({message: \"Checkout success\", newCheckout: newCheckout}));\n                })\n            }\n          })\n        }\n      )\n    });\n})\n\nrouter.post('/masterdata/add', urlencodedParser, (req, res) => {\n    res.setHeader('Content-Type', 'application/json');\n\n    let code = req.body.code\n    let name = req.body.name\n    let price = req.body.price\n\n    Masterdatas.find({ code: code }, function(err, data) {\n      if (err) throw err;\n\n      if (data.length == 0) {\n        let newData = Masterdatas({\n          code: code,\n          name: name,\n          price: price,\n        });\n\n        newData.save(function(err) {\n          if (err) throw err;\n\n          res.status(200);\n          res.send(JSON.stringify({message: \"Add data success\", newData: newData}));\n        });\n      } else {\n        res.status(406);\n        res.send(JSON.stringify({message: \"Already Registered\"}));\n      }\n    });\n})\n\nrouter.put('/masterdata/edit/:id', urlencodedParser, (req, res) => {\n    res.setHeader('Content-Type', 'application/json');\n\n    let id = req.params.id\n    let code = req.body.code\n    let name = req.body.name\n    let price = req.body.price\n\n    Masterdatas.findOne({ _id: id }, function(err, data) {\n      if (err) throw err;\n\n      if (data) {\n        data.code = code\n        data.name = name\n        data.price = price\n\n        data.save(function(err) {\n          if (err) throw err;\n\n          res.status(200);\n          res.send(JSON.stringify({message: \"Edit data success\", data: data}));\n        });\n      } else {\n        res.status(446);\n        res.send(JSON.stringify({message: \"Data not found\"}));\n      }\n    });\n})\n\nrouter.get('/masterdata/:code', urlencodedParser, (req, res) => {\n    res.setHeader('Content-Type', 'application/json');\n\n    let code = req.params.code\n\n    Masterdatas.findOne({\n\n      $and: [\n          { $or: [{code: code}, {name: new RegExp('^' + code + '$', \"i\")}] },\n      ]\n    }, function(err, data) {\n      if (err) throw err;\n\n      if (data) {\n        res.status(200);\n        res.send(JSON.stringify({data: data}));\n      } else {\n        res.status(446);\n        res.send(JSON.stringify({message: \"Data not found\"}));\n      }\n    });\n})\n\nrouter.get('/masterdata/:page/:limit', (req, res) => {\n    let next = null\n    let previous = null\n    let page = req.params.page\n    let limit = req.params.limit\n    let response = res\n\n    let task = Masterdatas.find({}, null, { skip: (page - 1) * limit , sort: {'_id': -1}}).limit(parseInt(limit));\n\n    task.exec(function(err, datas) {\n        let taskNext = Masterdatas.findOne({}, null, { skip: page * limit , sort: {'_id': -1}})\n\n        taskNext.exec(function(err, data) {\n          if (data) {\n              next = parseInt(page) + 1\n          }\n\n          if (page > 1) {\n              previous = page - 1\n          }\n\n          response.setHeader('Content-Type', 'application/json');\n          response.status(200);\n          response.send(JSON.stringify({data: datas, page: page, next: next, previous: previous}));\n        })\n    })\n})\n\nrouter.post('/login', urlencodedParser, (req, res) => {\n    res.setHeader('Content-Type', 'application/json');\n\n    let username = req.body.username\n    let password = crypto.createHash('sha256').update(req.body.password).digest('base64')\n\n    Users.findOne({ username: username , password: password}, function(err, user) {\n      if (err) throw err;\n\n      if (user != null) {\n        let client = redis.createClient(process.env.REDISPORT, process.env.REDISHOST);\n        let key =  crypto.createHash('sha256').update(username + new Date().toLocaleString()).digest('base64')\n        let url = '/'\n\n        client.set(key, JSON.stringify(user), 'EX', 86400);\n\n        res.setHeader('Set-Cookie', cookie.serialize('token', key, {\n          httpOnly: true,\n          maxAge: 60 * 60 * 24,\n          path: '/'\n        }));\n\n        if (user.role == \"Operator\") {\n          url = 'masterdata'\n        } else {\n          url = 'cashier'\n        }\n\n        res.status(200);\n        res.send(JSON.stringify({accessToken: key, url: url}));\n      } else {\n        res.status(404);\n        res.send(JSON.stringify({message: \"Invalid user. Please check your username and password.\"}));\n      }\n    });\n})\n\nrouter.post('/register', urlencodedParser, (req, res) => {\n    res.setHeader('Content-Type', 'application/json');\n\n    let username = req.body.username\n    let password = crypto.createHash('sha256').update(req.body.password).digest('base64')\n    let role = req.body.role\n\n    Users.find({ username: username }, function(err, user) {\n      if (err) throw err;\n\n\n      if (user.length == 0) {\n        let newUser = Users({\n          username: username,\n          password: password,\n          role: role,\n          createdAt: Date.now(),\n        });\n\n        newUser.save(function(err) {\n          if (err) throw err;\n\n          res.status(200);\n          res.send(JSON.stringify({message: \"Register success, please login.\"}));\n        });\n      } else {\n        res.status(406);\n        res.send(JSON.stringify({message: \"Already Registered\"}));\n      }\n    });\n})\n\nfunction validateToken(token) {\n  client.get(token, function (err, result) {\n      if (err) throw err;\n\n      if (result) {\n          return true\n      }\n\n      return false\n  });\n}\n\n\nexport { router as apiRoute }\n"],"file":"api.js"}